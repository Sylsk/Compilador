Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement_list statement
Rule 3     statement_list -> statement
Rule 4     statement -> statement_print
Rule 5     statement -> statement_assign
Rule 6     statement -> statement_if
Rule 7     statement -> statement_while
Rule 8     statement -> statement_for
Rule 9     statement -> block
Rule 10    statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON
Rule 11    expression_list -> expression_list COMMA expression
Rule 12    expression_list -> expression
Rule 13    statement_assign -> ID EQUALS expression SEMICOLON
Rule 14    assign_expression -> ID EQUALS expression
Rule 15    assign_expression_opt -> assign_expression
Rule 16    assign_expression_opt -> empty
Rule 17    expression_opt -> expression
Rule 18    expression_opt -> empty
Rule 19    empty -> <empty>
Rule 20    statement_if -> IF LPAREN expression RPAREN statement
Rule 21    statement_if -> IF LPAREN expression RPAREN statement ELSE statement
Rule 22    statement_while -> WHILE LPAREN expression RPAREN statement
Rule 23    statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
Rule 24    block -> LBRACE statement_list RBRACE
Rule 25    expression -> expression PLUS expression
Rule 26    expression -> expression MINUS expression
Rule 27    expression -> expression TIMES expression
Rule 28    expression -> expression DIVIDE expression
Rule 29    expression -> expression LESS expression
Rule 30    expression -> expression GREATER expression
Rule 31    expression -> expression AND expression
Rule 32    expression -> expression OR expression
Rule 33    expression -> NOT expression
Rule 34    expression -> LPAREN expression RPAREN
Rule 35    expression -> NUMBER
Rule 36    expression -> STRING
Rule 37    expression -> ID

Terminals, with rules where they appear

AND                  : 31
COMMA                : 11
DIVIDE               : 28
ELSE                 : 21
EQUALS               : 13 14
FOR                  : 23
GREATER              : 30
ID                   : 13 14 37
IF                   : 20 21
LBRACE               : 24
LESS                 : 29
LPAREN               : 10 20 21 22 23 34
MINUS                : 26
NOT                  : 33
NUMBER               : 35
OR                   : 32
PLUS                 : 25
PRINT                : 10
RBRACE               : 24
RPAREN               : 10 20 21 22 23 34
SEMICOLON            : 10 13 23 23
STRING               : 36
TIMES                : 27
WHILE                : 22
error                : 

Nonterminals, with rules where they appear

assign_expression    : 15
assign_expression_opt : 23 23
block                : 9
empty                : 16 18
expression           : 11 12 13 14 17 20 21 22 25 25 26 26 27 27 28 28 29 29 30 30 31 31 32 32 33 34
expression_list      : 10 11
expression_opt       : 23
program              : 0
statement            : 2 3 20 21 21 22 23
statement_assign     : 5
statement_for        : 8
statement_if         : 6
statement_list       : 1 2 24
statement_print      : 4
statement_while      : 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . statement_print
    (5) statement -> . statement_assign
    (6) statement -> . statement_if
    (7) statement -> . statement_while
    (8) statement -> . statement_for
    (9) statement -> . block
    (10) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (13) statement_assign -> . ID EQUALS expression SEMICOLON
    (20) statement_if -> . IF LPAREN expression RPAREN statement
    (21) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (22) statement_while -> . WHILE LPAREN expression RPAREN statement
    (23) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (24) block -> . LBRACE statement_list RBRACE

    PRINT           shift and go to state 10
    ID              shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    LBRACE          shift and go to state 15

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    statement_print                shift and go to state 4
    statement_assign               shift and go to state 5
    statement_if                   shift and go to state 6
    statement_while                shift and go to state 7
    statement_for                  shift and go to state 8
    block                          shift and go to state 9

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (2) statement_list -> statement_list . statement
    (4) statement -> . statement_print
    (5) statement -> . statement_assign
    (6) statement -> . statement_if
    (7) statement -> . statement_while
    (8) statement -> . statement_for
    (9) statement -> . block
    (10) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (13) statement_assign -> . ID EQUALS expression SEMICOLON
    (20) statement_if -> . IF LPAREN expression RPAREN statement
    (21) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (22) statement_while -> . WHILE LPAREN expression RPAREN statement
    (23) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (24) block -> . LBRACE statement_list RBRACE

    $end            reduce using rule 1 (program -> statement_list .)
    PRINT           shift and go to state 10
    ID              shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    LBRACE          shift and go to state 15

    statement                      shift and go to state 16
    statement_print                shift and go to state 4
    statement_assign               shift and go to state 5
    statement_if                   shift and go to state 6
    statement_while                shift and go to state 7
    statement_for                  shift and go to state 8
    block                          shift and go to state 9

state 3

    (3) statement_list -> statement .

    PRINT           reduce using rule 3 (statement_list -> statement .)
    ID              reduce using rule 3 (statement_list -> statement .)
    IF              reduce using rule 3 (statement_list -> statement .)
    WHILE           reduce using rule 3 (statement_list -> statement .)
    FOR             reduce using rule 3 (statement_list -> statement .)
    LBRACE          reduce using rule 3 (statement_list -> statement .)
    $end            reduce using rule 3 (statement_list -> statement .)
    RBRACE          reduce using rule 3 (statement_list -> statement .)


state 4

    (4) statement -> statement_print .

    PRINT           reduce using rule 4 (statement -> statement_print .)
    ID              reduce using rule 4 (statement -> statement_print .)
    IF              reduce using rule 4 (statement -> statement_print .)
    WHILE           reduce using rule 4 (statement -> statement_print .)
    FOR             reduce using rule 4 (statement -> statement_print .)
    LBRACE          reduce using rule 4 (statement -> statement_print .)
    $end            reduce using rule 4 (statement -> statement_print .)
    RBRACE          reduce using rule 4 (statement -> statement_print .)
    ELSE            reduce using rule 4 (statement -> statement_print .)


state 5

    (5) statement -> statement_assign .

    PRINT           reduce using rule 5 (statement -> statement_assign .)
    ID              reduce using rule 5 (statement -> statement_assign .)
    IF              reduce using rule 5 (statement -> statement_assign .)
    WHILE           reduce using rule 5 (statement -> statement_assign .)
    FOR             reduce using rule 5 (statement -> statement_assign .)
    LBRACE          reduce using rule 5 (statement -> statement_assign .)
    $end            reduce using rule 5 (statement -> statement_assign .)
    RBRACE          reduce using rule 5 (statement -> statement_assign .)
    ELSE            reduce using rule 5 (statement -> statement_assign .)


state 6

    (6) statement -> statement_if .

    PRINT           reduce using rule 6 (statement -> statement_if .)
    ID              reduce using rule 6 (statement -> statement_if .)
    IF              reduce using rule 6 (statement -> statement_if .)
    WHILE           reduce using rule 6 (statement -> statement_if .)
    FOR             reduce using rule 6 (statement -> statement_if .)
    LBRACE          reduce using rule 6 (statement -> statement_if .)
    $end            reduce using rule 6 (statement -> statement_if .)
    RBRACE          reduce using rule 6 (statement -> statement_if .)
    ELSE            reduce using rule 6 (statement -> statement_if .)


state 7

    (7) statement -> statement_while .

    PRINT           reduce using rule 7 (statement -> statement_while .)
    ID              reduce using rule 7 (statement -> statement_while .)
    IF              reduce using rule 7 (statement -> statement_while .)
    WHILE           reduce using rule 7 (statement -> statement_while .)
    FOR             reduce using rule 7 (statement -> statement_while .)
    LBRACE          reduce using rule 7 (statement -> statement_while .)
    $end            reduce using rule 7 (statement -> statement_while .)
    RBRACE          reduce using rule 7 (statement -> statement_while .)
    ELSE            reduce using rule 7 (statement -> statement_while .)


state 8

    (8) statement -> statement_for .

    PRINT           reduce using rule 8 (statement -> statement_for .)
    ID              reduce using rule 8 (statement -> statement_for .)
    IF              reduce using rule 8 (statement -> statement_for .)
    WHILE           reduce using rule 8 (statement -> statement_for .)
    FOR             reduce using rule 8 (statement -> statement_for .)
    LBRACE          reduce using rule 8 (statement -> statement_for .)
    $end            reduce using rule 8 (statement -> statement_for .)
    RBRACE          reduce using rule 8 (statement -> statement_for .)
    ELSE            reduce using rule 8 (statement -> statement_for .)


state 9

    (9) statement -> block .

    PRINT           reduce using rule 9 (statement -> block .)
    ID              reduce using rule 9 (statement -> block .)
    IF              reduce using rule 9 (statement -> block .)
    WHILE           reduce using rule 9 (statement -> block .)
    FOR             reduce using rule 9 (statement -> block .)
    LBRACE          reduce using rule 9 (statement -> block .)
    $end            reduce using rule 9 (statement -> block .)
    RBRACE          reduce using rule 9 (statement -> block .)
    ELSE            reduce using rule 9 (statement -> block .)


state 10

    (10) statement_print -> PRINT . LPAREN expression_list RPAREN SEMICOLON

    LPAREN          shift and go to state 17


state 11

    (13) statement_assign -> ID . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 18


state 12

    (20) statement_if -> IF . LPAREN expression RPAREN statement
    (21) statement_if -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 19


state 13

    (22) statement_while -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 20


state 14

    (23) statement_for -> FOR . LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement

    LPAREN          shift and go to state 21


state 15

    (24) block -> LBRACE . statement_list RBRACE
    (2) statement_list -> . statement_list statement
    (3) statement_list -> . statement
    (4) statement -> . statement_print
    (5) statement -> . statement_assign
    (6) statement -> . statement_if
    (7) statement -> . statement_while
    (8) statement -> . statement_for
    (9) statement -> . block
    (10) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (13) statement_assign -> . ID EQUALS expression SEMICOLON
    (20) statement_if -> . IF LPAREN expression RPAREN statement
    (21) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (22) statement_while -> . WHILE LPAREN expression RPAREN statement
    (23) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (24) block -> . LBRACE statement_list RBRACE

    PRINT           shift and go to state 10
    ID              shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    LBRACE          shift and go to state 15

    statement_list                 shift and go to state 22
    statement                      shift and go to state 3
    statement_print                shift and go to state 4
    statement_assign               shift and go to state 5
    statement_if                   shift and go to state 6
    statement_while                shift and go to state 7
    statement_for                  shift and go to state 8
    block                          shift and go to state 9

state 16

    (2) statement_list -> statement_list statement .

    PRINT           reduce using rule 2 (statement_list -> statement_list statement .)
    ID              reduce using rule 2 (statement_list -> statement_list statement .)
    IF              reduce using rule 2 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 2 (statement_list -> statement_list statement .)
    FOR             reduce using rule 2 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 2 (statement_list -> statement_list statement .)
    $end            reduce using rule 2 (statement_list -> statement_list statement .)
    RBRACE          reduce using rule 2 (statement_list -> statement_list statement .)


state 17

    (10) statement_print -> PRINT LPAREN . expression_list RPAREN SEMICOLON
    (11) expression_list -> . expression_list COMMA expression
    (12) expression_list -> . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression
    (33) expression -> . NOT expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . NUMBER
    (36) expression -> . STRING
    (37) expression -> . ID

    NOT             shift and go to state 26
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    expression_list                shift and go to state 24
    expression                     shift and go to state 25

state 18

    (13) statement_assign -> ID EQUALS . expression SEMICOLON
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression
    (33) expression -> . NOT expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . NUMBER
    (36) expression -> . STRING
    (37) expression -> . ID

    NOT             shift and go to state 26
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    expression                     shift and go to state 30

state 19

    (20) statement_if -> IF LPAREN . expression RPAREN statement
    (21) statement_if -> IF LPAREN . expression RPAREN statement ELSE statement
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression
    (33) expression -> . NOT expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . NUMBER
    (36) expression -> . STRING
    (37) expression -> . ID

    NOT             shift and go to state 26
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    expression                     shift and go to state 31

state 20

    (22) statement_while -> WHILE LPAREN . expression RPAREN statement
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression
    (33) expression -> . NOT expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . NUMBER
    (36) expression -> . STRING
    (37) expression -> . ID

    NOT             shift and go to state 26
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    expression                     shift and go to state 32

state 21

    (23) statement_for -> FOR LPAREN . assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (15) assign_expression_opt -> . assign_expression
    (16) assign_expression_opt -> . empty
    (14) assign_expression -> . ID EQUALS expression
    (19) empty -> .

    ID              shift and go to state 36
    SEMICOLON       reduce using rule 19 (empty -> .)

    assign_expression_opt          shift and go to state 33
    assign_expression              shift and go to state 34
    empty                          shift and go to state 35

state 22

    (24) block -> LBRACE statement_list . RBRACE
    (2) statement_list -> statement_list . statement
    (4) statement -> . statement_print
    (5) statement -> . statement_assign
    (6) statement -> . statement_if
    (7) statement -> . statement_while
    (8) statement -> . statement_for
    (9) statement -> . block
    (10) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (13) statement_assign -> . ID EQUALS expression SEMICOLON
    (20) statement_if -> . IF LPAREN expression RPAREN statement
    (21) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (22) statement_while -> . WHILE LPAREN expression RPAREN statement
    (23) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (24) block -> . LBRACE statement_list RBRACE

    RBRACE          shift and go to state 37
    PRINT           shift and go to state 10
    ID              shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    LBRACE          shift and go to state 15

    statement                      shift and go to state 16
    statement_print                shift and go to state 4
    statement_assign               shift and go to state 5
    statement_if                   shift and go to state 6
    statement_while                shift and go to state 7
    statement_for                  shift and go to state 8
    block                          shift and go to state 9

state 23

    (34) expression -> LPAREN . expression RPAREN
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression
    (33) expression -> . NOT expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . NUMBER
    (36) expression -> . STRING
    (37) expression -> . ID

    NOT             shift and go to state 26
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    expression                     shift and go to state 38

state 24

    (10) statement_print -> PRINT LPAREN expression_list . RPAREN SEMICOLON
    (11) expression_list -> expression_list . COMMA expression

    RPAREN          shift and go to state 39
    COMMA           shift and go to state 40


state 25

    (12) expression_list -> expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          reduce using rule 12 (expression_list -> expression .)
    COMMA           reduce using rule 12 (expression_list -> expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    LESS            shift and go to state 45
    GREATER         shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48


state 26

    (33) expression -> NOT . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression
    (33) expression -> . NOT expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . NUMBER
    (36) expression -> . STRING
    (37) expression -> . ID

    NOT             shift and go to state 26
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    expression                     shift and go to state 49

state 27

    (35) expression -> NUMBER .

    PLUS            reduce using rule 35 (expression -> NUMBER .)
    MINUS           reduce using rule 35 (expression -> NUMBER .)
    TIMES           reduce using rule 35 (expression -> NUMBER .)
    DIVIDE          reduce using rule 35 (expression -> NUMBER .)
    LESS            reduce using rule 35 (expression -> NUMBER .)
    GREATER         reduce using rule 35 (expression -> NUMBER .)
    AND             reduce using rule 35 (expression -> NUMBER .)
    OR              reduce using rule 35 (expression -> NUMBER .)
    RPAREN          reduce using rule 35 (expression -> NUMBER .)
    COMMA           reduce using rule 35 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 35 (expression -> NUMBER .)


state 28

    (36) expression -> STRING .

    PLUS            reduce using rule 36 (expression -> STRING .)
    MINUS           reduce using rule 36 (expression -> STRING .)
    TIMES           reduce using rule 36 (expression -> STRING .)
    DIVIDE          reduce using rule 36 (expression -> STRING .)
    LESS            reduce using rule 36 (expression -> STRING .)
    GREATER         reduce using rule 36 (expression -> STRING .)
    AND             reduce using rule 36 (expression -> STRING .)
    OR              reduce using rule 36 (expression -> STRING .)
    RPAREN          reduce using rule 36 (expression -> STRING .)
    COMMA           reduce using rule 36 (expression -> STRING .)
    SEMICOLON       reduce using rule 36 (expression -> STRING .)


state 29

    (37) expression -> ID .

    PLUS            reduce using rule 37 (expression -> ID .)
    MINUS           reduce using rule 37 (expression -> ID .)
    TIMES           reduce using rule 37 (expression -> ID .)
    DIVIDE          reduce using rule 37 (expression -> ID .)
    LESS            reduce using rule 37 (expression -> ID .)
    GREATER         reduce using rule 37 (expression -> ID .)
    AND             reduce using rule 37 (expression -> ID .)
    OR              reduce using rule 37 (expression -> ID .)
    RPAREN          reduce using rule 37 (expression -> ID .)
    COMMA           reduce using rule 37 (expression -> ID .)
    SEMICOLON       reduce using rule 37 (expression -> ID .)


state 30

    (13) statement_assign -> ID EQUALS expression . SEMICOLON
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    SEMICOLON       shift and go to state 50
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    LESS            shift and go to state 45
    GREATER         shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48


state 31

    (20) statement_if -> IF LPAREN expression . RPAREN statement
    (21) statement_if -> IF LPAREN expression . RPAREN statement ELSE statement
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          shift and go to state 51
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    LESS            shift and go to state 45
    GREATER         shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48


state 32

    (22) statement_while -> WHILE LPAREN expression . RPAREN statement
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          shift and go to state 52
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    LESS            shift and go to state 45
    GREATER         shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48


state 33

    (23) statement_for -> FOR LPAREN assign_expression_opt . SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement

    SEMICOLON       shift and go to state 53


state 34

    (15) assign_expression_opt -> assign_expression .

    SEMICOLON       reduce using rule 15 (assign_expression_opt -> assign_expression .)
    RPAREN          reduce using rule 15 (assign_expression_opt -> assign_expression .)


state 35

    (16) assign_expression_opt -> empty .

    SEMICOLON       reduce using rule 16 (assign_expression_opt -> empty .)
    RPAREN          reduce using rule 16 (assign_expression_opt -> empty .)


state 36

    (14) assign_expression -> ID . EQUALS expression

    EQUALS          shift and go to state 54


state 37

    (24) block -> LBRACE statement_list RBRACE .

    PRINT           reduce using rule 24 (block -> LBRACE statement_list RBRACE .)
    ID              reduce using rule 24 (block -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 24 (block -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 24 (block -> LBRACE statement_list RBRACE .)
    FOR             reduce using rule 24 (block -> LBRACE statement_list RBRACE .)
    LBRACE          reduce using rule 24 (block -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 24 (block -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 24 (block -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 24 (block -> LBRACE statement_list RBRACE .)


state 38

    (34) expression -> LPAREN expression . RPAREN
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          shift and go to state 55
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    LESS            shift and go to state 45
    GREATER         shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48


state 39

    (10) statement_print -> PRINT LPAREN expression_list RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 56


state 40

    (11) expression_list -> expression_list COMMA . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression
    (33) expression -> . NOT expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . NUMBER
    (36) expression -> . STRING
    (37) expression -> . ID

    NOT             shift and go to state 26
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    expression                     shift and go to state 57

state 41

    (25) expression -> expression PLUS . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression
    (33) expression -> . NOT expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . NUMBER
    (36) expression -> . STRING
    (37) expression -> . ID

    NOT             shift and go to state 26
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    expression                     shift and go to state 58

state 42

    (26) expression -> expression MINUS . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression
    (33) expression -> . NOT expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . NUMBER
    (36) expression -> . STRING
    (37) expression -> . ID

    NOT             shift and go to state 26
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    expression                     shift and go to state 59

state 43

    (27) expression -> expression TIMES . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression
    (33) expression -> . NOT expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . NUMBER
    (36) expression -> . STRING
    (37) expression -> . ID

    NOT             shift and go to state 26
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    expression                     shift and go to state 60

state 44

    (28) expression -> expression DIVIDE . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression
    (33) expression -> . NOT expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . NUMBER
    (36) expression -> . STRING
    (37) expression -> . ID

    NOT             shift and go to state 26
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    expression                     shift and go to state 61

state 45

    (29) expression -> expression LESS . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression
    (33) expression -> . NOT expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . NUMBER
    (36) expression -> . STRING
    (37) expression -> . ID

    NOT             shift and go to state 26
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    expression                     shift and go to state 62

state 46

    (30) expression -> expression GREATER . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression
    (33) expression -> . NOT expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . NUMBER
    (36) expression -> . STRING
    (37) expression -> . ID

    NOT             shift and go to state 26
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    expression                     shift and go to state 63

state 47

    (31) expression -> expression AND . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression
    (33) expression -> . NOT expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . NUMBER
    (36) expression -> . STRING
    (37) expression -> . ID

    NOT             shift and go to state 26
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    expression                     shift and go to state 64

state 48

    (32) expression -> expression OR . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression
    (33) expression -> . NOT expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . NUMBER
    (36) expression -> . STRING
    (37) expression -> . ID

    NOT             shift and go to state 26
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    expression                     shift and go to state 65

state 49

    (33) expression -> NOT expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    PLUS            reduce using rule 33 (expression -> NOT expression .)
    MINUS           reduce using rule 33 (expression -> NOT expression .)
    TIMES           reduce using rule 33 (expression -> NOT expression .)
    DIVIDE          reduce using rule 33 (expression -> NOT expression .)
    LESS            reduce using rule 33 (expression -> NOT expression .)
    GREATER         reduce using rule 33 (expression -> NOT expression .)
    AND             reduce using rule 33 (expression -> NOT expression .)
    OR              reduce using rule 33 (expression -> NOT expression .)
    RPAREN          reduce using rule 33 (expression -> NOT expression .)
    COMMA           reduce using rule 33 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 33 (expression -> NOT expression .)

  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 44 ]
  ! LESS            [ shift and go to state 45 ]
  ! GREATER         [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]


state 50

    (13) statement_assign -> ID EQUALS expression SEMICOLON .

    PRINT           reduce using rule 13 (statement_assign -> ID EQUALS expression SEMICOLON .)
    ID              reduce using rule 13 (statement_assign -> ID EQUALS expression SEMICOLON .)
    IF              reduce using rule 13 (statement_assign -> ID EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 13 (statement_assign -> ID EQUALS expression SEMICOLON .)
    FOR             reduce using rule 13 (statement_assign -> ID EQUALS expression SEMICOLON .)
    LBRACE          reduce using rule 13 (statement_assign -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 13 (statement_assign -> ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 13 (statement_assign -> ID EQUALS expression SEMICOLON .)
    ELSE            reduce using rule 13 (statement_assign -> ID EQUALS expression SEMICOLON .)


state 51

    (20) statement_if -> IF LPAREN expression RPAREN . statement
    (21) statement_if -> IF LPAREN expression RPAREN . statement ELSE statement
    (4) statement -> . statement_print
    (5) statement -> . statement_assign
    (6) statement -> . statement_if
    (7) statement -> . statement_while
    (8) statement -> . statement_for
    (9) statement -> . block
    (10) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (13) statement_assign -> . ID EQUALS expression SEMICOLON
    (20) statement_if -> . IF LPAREN expression RPAREN statement
    (21) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (22) statement_while -> . WHILE LPAREN expression RPAREN statement
    (23) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (24) block -> . LBRACE statement_list RBRACE

    PRINT           shift and go to state 10
    ID              shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    LBRACE          shift and go to state 15

    statement                      shift and go to state 66
    statement_print                shift and go to state 4
    statement_assign               shift and go to state 5
    statement_if                   shift and go to state 6
    statement_while                shift and go to state 7
    statement_for                  shift and go to state 8
    block                          shift and go to state 9

state 52

    (22) statement_while -> WHILE LPAREN expression RPAREN . statement
    (4) statement -> . statement_print
    (5) statement -> . statement_assign
    (6) statement -> . statement_if
    (7) statement -> . statement_while
    (8) statement -> . statement_for
    (9) statement -> . block
    (10) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (13) statement_assign -> . ID EQUALS expression SEMICOLON
    (20) statement_if -> . IF LPAREN expression RPAREN statement
    (21) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (22) statement_while -> . WHILE LPAREN expression RPAREN statement
    (23) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (24) block -> . LBRACE statement_list RBRACE

    PRINT           shift and go to state 10
    ID              shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    LBRACE          shift and go to state 15

    statement                      shift and go to state 67
    statement_print                shift and go to state 4
    statement_assign               shift and go to state 5
    statement_if                   shift and go to state 6
    statement_while                shift and go to state 7
    statement_for                  shift and go to state 8
    block                          shift and go to state 9

state 53

    (23) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON . expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (17) expression_opt -> . expression
    (18) expression_opt -> . empty
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression
    (33) expression -> . NOT expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . NUMBER
    (36) expression -> . STRING
    (37) expression -> . ID
    (19) empty -> .

    NOT             shift and go to state 26
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29
    SEMICOLON       reduce using rule 19 (empty -> .)

    expression_opt                 shift and go to state 68
    expression                     shift and go to state 69
    empty                          shift and go to state 70

state 54

    (14) assign_expression -> ID EQUALS . expression
    (25) expression -> . expression PLUS expression
    (26) expression -> . expression MINUS expression
    (27) expression -> . expression TIMES expression
    (28) expression -> . expression DIVIDE expression
    (29) expression -> . expression LESS expression
    (30) expression -> . expression GREATER expression
    (31) expression -> . expression AND expression
    (32) expression -> . expression OR expression
    (33) expression -> . NOT expression
    (34) expression -> . LPAREN expression RPAREN
    (35) expression -> . NUMBER
    (36) expression -> . STRING
    (37) expression -> . ID

    NOT             shift and go to state 26
    LPAREN          shift and go to state 23
    NUMBER          shift and go to state 27
    STRING          shift and go to state 28
    ID              shift and go to state 29

    expression                     shift and go to state 71

state 55

    (34) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    LESS            reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 34 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 34 (expression -> LPAREN expression RPAREN .)


state 56

    (10) statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .

    PRINT           reduce using rule 10 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    ID              reduce using rule 10 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    IF              reduce using rule 10 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    WHILE           reduce using rule 10 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    FOR             reduce using rule 10 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    LBRACE          reduce using rule 10 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    $end            reduce using rule 10 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    RBRACE          reduce using rule 10 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)
    ELSE            reduce using rule 10 (statement_print -> PRINT LPAREN expression_list RPAREN SEMICOLON .)


state 57

    (11) expression_list -> expression_list COMMA expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    RPAREN          reduce using rule 11 (expression_list -> expression_list COMMA expression .)
    COMMA           reduce using rule 11 (expression_list -> expression_list COMMA expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    LESS            shift and go to state 45
    GREATER         shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48


state 58

    (25) expression -> expression PLUS expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    PLUS            reduce using rule 25 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 25 (expression -> expression PLUS expression .)
    LESS            reduce using rule 25 (expression -> expression PLUS expression .)
    GREATER         reduce using rule 25 (expression -> expression PLUS expression .)
    AND             reduce using rule 25 (expression -> expression PLUS expression .)
    OR              reduce using rule 25 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 25 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 25 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 25 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44

  ! TIMES           [ reduce using rule 25 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! LESS            [ shift and go to state 45 ]
  ! GREATER         [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]


state 59

    (26) expression -> expression MINUS expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    PLUS            reduce using rule 26 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 26 (expression -> expression MINUS expression .)
    LESS            reduce using rule 26 (expression -> expression MINUS expression .)
    GREATER         reduce using rule 26 (expression -> expression MINUS expression .)
    AND             reduce using rule 26 (expression -> expression MINUS expression .)
    OR              reduce using rule 26 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 26 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 26 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 26 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44

  ! TIMES           [ reduce using rule 26 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 26 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! LESS            [ shift and go to state 45 ]
  ! GREATER         [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]


state 60

    (27) expression -> expression TIMES expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    PLUS            reduce using rule 27 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 27 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 27 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 27 (expression -> expression TIMES expression .)
    LESS            reduce using rule 27 (expression -> expression TIMES expression .)
    GREATER         reduce using rule 27 (expression -> expression TIMES expression .)
    AND             reduce using rule 27 (expression -> expression TIMES expression .)
    OR              reduce using rule 27 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 27 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 27 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 27 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 44 ]
  ! LESS            [ shift and go to state 45 ]
  ! GREATER         [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]


state 61

    (28) expression -> expression DIVIDE expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    PLUS            reduce using rule 28 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 28 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 28 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 28 (expression -> expression DIVIDE expression .)
    LESS            reduce using rule 28 (expression -> expression DIVIDE expression .)
    GREATER         reduce using rule 28 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 28 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 28 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 28 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 28 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 28 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 44 ]
  ! LESS            [ shift and go to state 45 ]
  ! GREATER         [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]


state 62

    (29) expression -> expression LESS expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    LESS            reduce using rule 29 (expression -> expression LESS expression .)
    GREATER         reduce using rule 29 (expression -> expression LESS expression .)
    AND             reduce using rule 29 (expression -> expression LESS expression .)
    OR              reduce using rule 29 (expression -> expression LESS expression .)
    RPAREN          reduce using rule 29 (expression -> expression LESS expression .)
    COMMA           reduce using rule 29 (expression -> expression LESS expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression LESS expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44

  ! PLUS            [ reduce using rule 29 (expression -> expression LESS expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression LESS expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression LESS expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression LESS expression .) ]
  ! LESS            [ shift and go to state 45 ]
  ! GREATER         [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]


state 63

    (30) expression -> expression GREATER expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    LESS            reduce using rule 30 (expression -> expression GREATER expression .)
    GREATER         reduce using rule 30 (expression -> expression GREATER expression .)
    AND             reduce using rule 30 (expression -> expression GREATER expression .)
    OR              reduce using rule 30 (expression -> expression GREATER expression .)
    RPAREN          reduce using rule 30 (expression -> expression GREATER expression .)
    COMMA           reduce using rule 30 (expression -> expression GREATER expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression GREATER expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44

  ! PLUS            [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression GREATER expression .) ]
  ! LESS            [ shift and go to state 45 ]
  ! GREATER         [ shift and go to state 46 ]
  ! AND             [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]


state 64

    (31) expression -> expression AND expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    AND             reduce using rule 31 (expression -> expression AND expression .)
    OR              reduce using rule 31 (expression -> expression AND expression .)
    RPAREN          reduce using rule 31 (expression -> expression AND expression .)
    COMMA           reduce using rule 31 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression AND expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    LESS            shift and go to state 45
    GREATER         shift and go to state 46

  ! PLUS            [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! LESS            [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! GREATER         [ reduce using rule 31 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 47 ]
  ! OR              [ shift and go to state 48 ]


state 65

    (32) expression -> expression OR expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    OR              reduce using rule 32 (expression -> expression OR expression .)
    RPAREN          reduce using rule 32 (expression -> expression OR expression .)
    COMMA           reduce using rule 32 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression OR expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    LESS            shift and go to state 45
    GREATER         shift and go to state 46
    AND             shift and go to state 47

  ! PLUS            [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! LESS            [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! GREATER         [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 32 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 48 ]


state 66

    (20) statement_if -> IF LPAREN expression RPAREN statement .
    (21) statement_if -> IF LPAREN expression RPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    PRINT           reduce using rule 20 (statement_if -> IF LPAREN expression RPAREN statement .)
    ID              reduce using rule 20 (statement_if -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 20 (statement_if -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 20 (statement_if -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 20 (statement_if -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 20 (statement_if -> IF LPAREN expression RPAREN statement .)
    $end            reduce using rule 20 (statement_if -> IF LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 20 (statement_if -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 72

  ! ELSE            [ reduce using rule 20 (statement_if -> IF LPAREN expression RPAREN statement .) ]


state 67

    (22) statement_while -> WHILE LPAREN expression RPAREN statement .

    PRINT           reduce using rule 22 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 22 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 22 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 22 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 22 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 22 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    $end            reduce using rule 22 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    RBRACE          reduce using rule 22 (statement_while -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 22 (statement_while -> WHILE LPAREN expression RPAREN statement .)


state 68

    (23) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt . SEMICOLON assign_expression_opt RPAREN statement

    SEMICOLON       shift and go to state 73


state 69

    (17) expression_opt -> expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    SEMICOLON       reduce using rule 17 (expression_opt -> expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    LESS            shift and go to state 45
    GREATER         shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48


state 70

    (18) expression_opt -> empty .

    SEMICOLON       reduce using rule 18 (expression_opt -> empty .)


state 71

    (14) assign_expression -> ID EQUALS expression .
    (25) expression -> expression . PLUS expression
    (26) expression -> expression . MINUS expression
    (27) expression -> expression . TIMES expression
    (28) expression -> expression . DIVIDE expression
    (29) expression -> expression . LESS expression
    (30) expression -> expression . GREATER expression
    (31) expression -> expression . AND expression
    (32) expression -> expression . OR expression

    SEMICOLON       reduce using rule 14 (assign_expression -> ID EQUALS expression .)
    RPAREN          reduce using rule 14 (assign_expression -> ID EQUALS expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44
    LESS            shift and go to state 45
    GREATER         shift and go to state 46
    AND             shift and go to state 47
    OR              shift and go to state 48


state 72

    (21) statement_if -> IF LPAREN expression RPAREN statement ELSE . statement
    (4) statement -> . statement_print
    (5) statement -> . statement_assign
    (6) statement -> . statement_if
    (7) statement -> . statement_while
    (8) statement -> . statement_for
    (9) statement -> . block
    (10) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (13) statement_assign -> . ID EQUALS expression SEMICOLON
    (20) statement_if -> . IF LPAREN expression RPAREN statement
    (21) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (22) statement_while -> . WHILE LPAREN expression RPAREN statement
    (23) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (24) block -> . LBRACE statement_list RBRACE

    PRINT           shift and go to state 10
    ID              shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    LBRACE          shift and go to state 15

    statement                      shift and go to state 74
    statement_print                shift and go to state 4
    statement_assign               shift and go to state 5
    statement_if                   shift and go to state 6
    statement_while                shift and go to state 7
    statement_for                  shift and go to state 8
    block                          shift and go to state 9

state 73

    (23) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON . assign_expression_opt RPAREN statement
    (15) assign_expression_opt -> . assign_expression
    (16) assign_expression_opt -> . empty
    (14) assign_expression -> . ID EQUALS expression
    (19) empty -> .

    ID              shift and go to state 36
    RPAREN          reduce using rule 19 (empty -> .)

    assign_expression_opt          shift and go to state 75
    assign_expression              shift and go to state 34
    empty                          shift and go to state 35

state 74

    (21) statement_if -> IF LPAREN expression RPAREN statement ELSE statement .

    PRINT           reduce using rule 21 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    ID              reduce using rule 21 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 21 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 21 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 21 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 21 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    $end            reduce using rule 21 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    RBRACE          reduce using rule 21 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 21 (statement_if -> IF LPAREN expression RPAREN statement ELSE statement .)


state 75

    (23) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt . RPAREN statement

    RPAREN          shift and go to state 76


state 76

    (23) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN . statement
    (4) statement -> . statement_print
    (5) statement -> . statement_assign
    (6) statement -> . statement_if
    (7) statement -> . statement_while
    (8) statement -> . statement_for
    (9) statement -> . block
    (10) statement_print -> . PRINT LPAREN expression_list RPAREN SEMICOLON
    (13) statement_assign -> . ID EQUALS expression SEMICOLON
    (20) statement_if -> . IF LPAREN expression RPAREN statement
    (21) statement_if -> . IF LPAREN expression RPAREN statement ELSE statement
    (22) statement_while -> . WHILE LPAREN expression RPAREN statement
    (23) statement_for -> . FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement
    (24) block -> . LBRACE statement_list RBRACE

    PRINT           shift and go to state 10
    ID              shift and go to state 11
    IF              shift and go to state 12
    WHILE           shift and go to state 13
    FOR             shift and go to state 14
    LBRACE          shift and go to state 15

    statement                      shift and go to state 77
    statement_print                shift and go to state 4
    statement_assign               shift and go to state 5
    statement_if                   shift and go to state 6
    statement_while                shift and go to state 7
    statement_for                  shift and go to state 8
    block                          shift and go to state 9

state 77

    (23) statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .

    PRINT           reduce using rule 23 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    ID              reduce using rule 23 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    IF              reduce using rule 23 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    WHILE           reduce using rule 23 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    FOR             reduce using rule 23 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    LBRACE          reduce using rule 23 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    $end            reduce using rule 23 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    RBRACE          reduce using rule 23 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)
    ELSE            reduce using rule 23 (statement_for -> FOR LPAREN assign_expression_opt SEMICOLON expression_opt SEMICOLON assign_expression_opt RPAREN statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ELSE in state 66 resolved as shift
